kind: Deployment
apiVersion: apps/v1
metadata:
  name: minikube-reactjs-feature-flags
spec:
  replicas: 2
  selector:
    matchLabels:
      app: minikube-reactjs-feature-flags
  template:
    metadata:
      labels:
        app: minikube-reactjs-feature-flags
    spec:
      containers:
        - name: minikube-reactjs-feature-flags
          image: react-js-feature:1.0.0-prod
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          resources:
            requests:
              memory: "100Mi"
              cpu: "300m"
            limits:
              memory: "200Mi"
              cpu: "600m"
---
kind: Service
apiVersion: v1
metadata:
  name: minikube-reactjs-feature-flags
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
      nodePort: 31000
  selector:
    app: minikube-reactjs-feature-flags

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ft
  labels:
    app: ft
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ft
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ft
    spec:
      containers:
      - image: ft_poc:1.0.0
        name: ft
        imagePullPolicy: Never
        resources:
          requests:
            cpu: "250m"
            memory: "256M"
          limits:
            cpu: "512m"
            memory: "512M"
        livenessProbe:
          httpGet:
            path: /health
            port: 10000
          initialDelaySeconds: 5
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            path: /health
            port: 10000
          initialDelaySeconds: 5
          timeoutSeconds: 5
        ports:
        - containerPort: 10000
          name:  ft
        volumeMounts:
        - name: ft-poc-configmap
          mountPath: /etc/config
      volumes:
        - name: ft-poc-configmap
          configMap:
            name: ft-data         
      restartPolicy: Always

---

kind: Service
apiVersion: v1
metadata:
  name: ft
spec:
  type: NodePort
  ports:
    - port: 10000
      targetPort: 10000
      protocol: TCP
      nodePort: 31001
  selector:
    app: ft